
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:osgi="http://www.springframework.org/schema/osgi"
	xmlns:amq="http://activemq.apache.org/schema/core"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
     http://www.springframework.org/schema/osgi http://www.springframework.org/schema/osgi/spring-osgi.xsd
     http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd">

	<bean id="JMSNotifier"
		class="org.rifidi.edge.notifications.internal.NotifierServiceImpl">
		<property name="extNotificationDest" ref="externalDest" />
		<property name="extNotificationTemplate" ref="extNotificationTemplate" />
		<property name="readerDAO" ref="ReaderDAOService" />
		<property name="commandDAO" ref="CommandDAOService" />
	</bean>

	<osgi:reference id="ReaderDAOService" interface="org.rifidi.edge.core.daos.ReaderDAO"
		cardinality="1..1" />
	<osgi:reference id="CommandDAOService"
		interface="org.rifidi.edge.core.daos.CommandDAO" cardinality="1..1" />

	<osgi:service id="JMSNotifierService" ref="JMSNotifier"
		interface="org.rifidi.edge.core.notifications.NotifierService" />

	<!--  External JMS Message Queue for events -->
	<amq:broker useJmx="false" persistent="false">
		<amq:transportConnectors>
			<amq:transportConnector uri="tcp://localhost:1099" />
		</amq:transportConnectors>

	</amq:broker>
	<!--  ActiveMQ destinations to use  -->
	<amq:queue id="externalDest" physicalName="org.rifidi.edge.external.notifications" />
	<!--
		JMS ConnectionFactory to use, configuring the embedded broker using
		XML
	-->
	<amq:connectionFactory id="externalConFac"
		brokerURL="tcp://localhost:1099" />

	<!-- Spring JMS Template -->
	<bean id="extNotificationTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory">
			<!-- lets wrap in a pool to avoid creating a connection per send -->
			<bean class="org.springframework.jms.connection.SingleConnectionFactory">
				<property name="targetConnectionFactory">
					<ref local="externalConFac" />
				</property>
			</bean>
		</property>
	</bean>

	<!-- Listen to the internal JMSQueue -->
	<bean id="jmsContainer"
		class="org.springframework.jms.listener.SimpleMessageListenerContainer">
		<property name="autoStartup" value="true" />
		<property name="connectionFactory" ref="myConnectionFactory" />
		<property name="destination" ref="myDestination" />
		<property name="messageListener" ref="myMessageListener" />
		<property name="acceptMessagesWhileStopping" value="true" />
	</bean>

	<bean id="myDestination" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg value="org.apache.activemq.spring.Test.spring.embedded" />
	</bean>
	<bean id="myConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="vm://localhost" />
	</bean>

	<bean id="myMessageListener" class="org.rifidi.edge.notifications.internal.TagEventListener" >
		<property name="extNotificationDest" ref="externalTagDest" />
		<property name="extNotificationTemplate" ref="extNotificationTemplate" />
	</bean>
	
	<amq:queue id="externalTagDest" physicalName="org.rifidi.edge.external.tags" />
</beans>