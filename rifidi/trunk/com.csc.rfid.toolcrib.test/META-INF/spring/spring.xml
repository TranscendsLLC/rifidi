<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:osgi="http://www.springframework.org/schema/osgi"
	xmlns:amq="http://activemq.apache.org/schema/core"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
    http://www.springframework.org/schema/osgi 
    http://www.springframework.org/schema/osgi/spring-osgi.xsd">

	<!-- Create the  Application bean and inject dependencies-->
	<bean id="rfidapp" class="com.csc.rfid.toolcrib.test.DataCollectorApp"
		init-method="start" destroy-method="stop">
		<property name="esperService" ref="esperManagementService" />
		<property name="readerDAO" ref="readerDAO" />
	</bean>

	<!-- Create the CommandProivder object and inject the db application -->
	<bean id="commands"
		class="com.csc.rfid.toolcrib.test.DataCollectorAppCommandProvider">
		<property name="app" ref="rfidapp" />
	</bean>

	<!--
		Get a reference to the Esper Management Service from the OSGi Service
		Registry
	-->
	<osgi:reference id="esperManagementService"
		interface="org.rifidi.edge.core.services.esper.EsperManagementService" />

	<osgi:reference id="readerDAO"
		interface="org.rifidi.edge.core.daos.ReaderDAO" />

	<!--
		Register the command provider service in the OSGi registry. This
		allows it to be hooked up the the eclipse console.
	-->
	<osgi:service ref="commands"
		interface="org.eclipse.osgi.framework.console.CommandProvider" />

	<osgi:service ref="rfidapp"
		interface="com.csc.rfid.toolcrib.test.DataCollectorApp" />
</beans>