<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.2"?>
<plugin>
   <extension
         point="org.eclipse.ui.perspectives">
      <perspective
            class="org.rifidi.edge.client.sal.perspective.SALPerspective"
            fixed="false"
            icon="icons/reader-16x16.png"
            id="org.rifidi.edge.client.sal.perspective"
            name="Sensor Abstraction Layer">
      </perspective>
   </extension>
   <extension
         point="org.eclipse.ui.views">
      <view
            allowMultiple="false"
            class="org.rifidi.edge.client.sal.views.EdgeServerView"
            icon="icons/server.png"
            id="org.rifidi.edge.client.sal.views.EdgeServerView"
            name="Edge Server View"
            restorable="true">
      </view>
      <view
            allowMultiple="false"
            class="org.rifidi.edge.client.sal.views.CommandView"
            icon="icons/cog.png"
            id="org.rifidi.edge.client.sal.views.CommandView"
            name="Command View"
            restorable="true">
      </view>
      <view
            allowMultiple="true"
            class="org.rifidi.edge.client.sal.views.tags.TagView"
            icon="icons/transmit.png"
            id="org.rifidi.edge.client.sal.tags"
            name="Tag View"
            restorable="true">
      </view>
   </extension>
   <extension
         point="org.eclipse.ui.perspectiveExtensions">
      <perspectiveExtension
            targetID="org.rifidi.edge.client.sal.perspective">
         <perspectiveShortcut
               id="org.rifidi.edge.client.sal.perspective">
         </perspectiveShortcut>
      </perspectiveExtension>
   </extension>
   <extension
         point="org.eclipse.ui.handlers">
      <handler
            class="org.rifidi.edge.client.sal.controller.edgeserver.handlers.ConnectHandler"
            commandId="org.rifidi.edge.client.sal.commands.edgeserver.connect">
         <enabledWhen>
            <iterate
                  ifEmpty="false">
               <and>
                  <instanceof
                        value="org.rifidi.edge.client.model.sal.RemoteEdgeServer">
                  </instanceof>
                  <test
                        property="org.rifidi.edge.client.sal.edgeserver.state"
                        value="DISCONNECTED">
                  </test>
               </and>
            </iterate>
         </enabledWhen>
      </handler>
      <handler
            class="org.rifidi.edge.client.sal.controller.edgeserver.handlers.DisconnectHandler"
            commandId="org.rifidi.edge.client.sal.commands.edgeserver.disconnect">
         <enabledWhen>
            <iterate
                  ifEmpty="false">
               <and>
                  <instanceof
                        value="org.rifidi.edge.client.model.sal.RemoteEdgeServer">
                  </instanceof>
                  <test
                        property="org.rifidi.edge.client.sal.edgeserver.state"
                        value="CONNECTED">
                  </test>
               </and>
            </iterate>
         </enabledWhen>
      </handler>
      <handler
            class="org.rifidi.edge.client.sal.controller.edgeserver.handlers.UpdateHandler"
            commandId="org.rifidi.edge.client.sal.commands.edgeserver.update">
         <enabledWhen>
            <iterate
                  ifEmpty="false">
               <and>
                  <instanceof
                        value="org.rifidi.edge.client.model.sal.RemoteEdgeServer">
                  </instanceof>
                  <test
                        property="org.rifidi.edge.client.sal.edgeserver.state"
                        value="CONNECTED">
                  </test>
               </and>
            </iterate>
         </enabledWhen>
      </handler>
      <handler
            class="org.rifidi.edge.client.sal.controller.edgeserver.handlers.SaveConfigurationHandler"
            commandId="org.rifidi.edge.client.sal.commands.edgeserver.save">
         <enabledWhen>
            <iterate
                  ifEmpty="false">
               <and>
                  <instanceof
                        value="org.rifidi.edge.client.model.sal.RemoteEdgeServer">
                  </instanceof>
                  <test
                        property="org.rifidi.edge.client.sal.edgeserver.state"
                        value="CONNECTED">
                  </test>
               </and>
            </iterate>
         </enabledWhen>
      </handler>
      <handler
            class="org.rifidi.edge.client.sal.controller.edgeserver.handlers.NewReaderHandler"
            commandId="org.rifidi.edge.client.sal.commands.edgeserver.newreader">
         <enabledWhen>
            <iterate
                  ifEmpty="false">
               <and>
                  <instanceof
                        value="org.rifidi.edge.client.model.sal.RemoteEdgeServer">
                  </instanceof>
                  <test
                        property="org.rifidi.edge.client.sal.edgeserver.state"
                        value="CONNECTED">
                  </test>
               </and>
            </iterate>
         </enabledWhen>
      </handler>
      <handler
            class="org.rifidi.edge.client.sal.controller.edgeserver.handlers.DeleteReaderHandler"
            commandId="org.rifidi.edge.client.sal.commands.reader.delete">
         <enabledWhen>
            <iterate
                  ifEmpty="false">
               <instanceof
                     value="org.rifidi.edge.client.model.sal.RemoteReader">
               </instanceof>
            </iterate>
         </enabledWhen>
      </handler>
      <handler
            class="org.rifidi.edge.client.sal.controller.edgeserver.handlers.CreateSessionHandler"
            commandId="org.rifidi.edge.client.sal.commands.reader.createsession">
         <enabledWhen>
            <iterate
                  ifEmpty="false">
               <instanceof
                     value="org.rifidi.edge.client.model.sal.RemoteReader">
               </instanceof>
            </iterate>
         </enabledWhen>
      </handler>
      <handler
            class="org.rifidi.edge.client.sal.controller.edgeserver.handlers.DeleteSessionHandler"
            commandId="org.rifidi.edge.client.sal.commands.session.delete">
         <enabledWhen>
            <iterate
                  ifEmpty="false">
               <instanceof
                     value="org.rifidi.edge.client.model.sal.RemoteSession">
               </instanceof>
            </iterate>
         </enabledWhen>
      </handler>
      <handler
            class="org.rifidi.edge.client.sal.controller.edgeserver.handlers.StartSessionHandler"
            commandId="org.rifidi.edge.client.sal.commands.session.start">
         <enabledWhen>
            <iterate
                  ifEmpty="false">
               <and>
                  <instanceof
                        value="org.rifidi.edge.client.model.sal.RemoteSession">
                  </instanceof>
                  <or>
                     <test
                           property="org.rifidi.edge.client.sal.remotesession.state"
                           value="CREATED">
                     </test>
                     <test
                           property="org.rifidi.edge.client.sal.remotesession.state"
                           value="CLOSED">
                     </test>
                  </or>
               </and>
            </iterate>
         </enabledWhen>
      </handler>
      <handler
            class="org.rifidi.edge.client.sal.controller.edgeserver.handlers.StopSessionHandler"
            commandId="org.rifidi.edge.client.sal.commands.session.stop">
         <enabledWhen>
            <iterate
                  ifEmpty="false">
               <and>
                  <instanceof
                        value="org.rifidi.edge.client.model.sal.RemoteSession">
                  </instanceof>
                  <not>
                     <test
                           property="org.rifidi.edge.client.sal.remotesession.state"
                           value="CREATED">
                     </test>
                  </not>
                  <not>
                     <test
                           property="org.rifidi.edge.client.sal.remotesession.state"
                           value="CLOSED">
                     </test>
                  </not>
               </and>
            </iterate>
         </enabledWhen>
      </handler>
      <handler
            class="org.rifidi.edge.client.sal.controller.commands.handlers.CreateCommandHandler"
            commandId="rg.rifidi.edge.client.sal.commands.commandconfig.create">
         <enabledWhen>
            <iterate>
               <and>
                  <instanceof
                        value="org.rifidi.edge.client.model.sal.RemoteCommandConfigType">
                  </instanceof>
               </and>
            </iterate>
         </enabledWhen>
      </handler>
      <handler
            class="org.rifidi.edge.client.sal.controller.commands.handlers.DeleteCommandHandler"
            commandId="rg.rifidi.edge.client.sal.commands.commandconfig.delete">
         <enabledWhen>
            <iterate
                  ifEmpty="false">
               <and>
                  <instanceof
                        value="org.rifidi.edge.client.model.sal.RemoteCommandConfiguration">
                  </instanceof>
               </and>
            </iterate>
         </enabledWhen>
      </handler>
      <handler
            class="org.rifidi.edge.client.sal.controller.edgeserver.handlers.DeleteJobHandler"
            commandId="org.rifidi.edge.client.sal.commands.jobs.kill">
         <enabledWhen>
            <iterate
                  ifEmpty="false">
               <instanceof
                     value="org.rifidi.edge.client.model.sal.RemoteJob">
               </instanceof>
            </iterate>
         </enabledWhen>
      </handler>
      <handler
            class="org.rifidi.edge.client.sal.controller.edgeserver.handlers.SubmitCommandHandler"
            commandId="org.rifidi.edge.client.sal.commands.jobs.submit">
         <enabledWhen>
            <iterate
                  ifEmpty="false">
               <instanceof
                     value="org.rifidi.edge.client.model.sal.RemoteSession">
               </instanceof>
            </iterate>
         </enabledWhen>
      </handler>
      <handler
            class="org.rifidi.edge.client.sal.controller.edgeserver.handlers.OpenTagViewHandler"
            commandId="org.rifidi.edge.client.sal.commands.reader.opentagview">
         <enabledWhen>
            <iterate
                  ifEmpty="false">
               <instanceof
                     value="org.rifidi.edge.client.model.sal.RemoteReader">
               </instanceof>
            </iterate>
         </enabledWhen>
      </handler>
      <handler
            class="org.rifidi.edge.client.sal.controller.edgeserver.handlers.ClearPropertyChangesHandler"
            commandId="org.rifidi.edge.client.sal.commands.reader.clearpropertychanges">
         <enabledWhen>
            <iterate
                  ifEmpty="false">
               <and>
                  <instanceof
                        value="org.rifidi.edge.client.model.sal.RemoteReader">
                  </instanceof>
                  <test
                        property="org.rifidi.edge.client.sal.reader.dirty"
                        value="true">
                  </test>
               </and>
            </iterate>
         </enabledWhen>
      </handler>
      <handler
            class="org.rifidi.edge.client.sal.controller.edgeserver.handlers.SynchPropertyChangesHandler"
            commandId="org.rifidi.edge.client.sal.commands.reader.synchpropertychanges">
         <enabledWhen>
            <iterate
                  ifEmpty="false">
               <and>
                  <instanceof
                        value="org.rifidi.edge.client.model.sal.RemoteReader">
                  </instanceof>
                  <test
                        property="org.rifidi.edge.client.sal.reader.dirty"
                        value="true">
                  </test>
               </and>
            </iterate>
         </enabledWhen>
      </handler>
      <handler
            class="org.rifidi.edge.client.sal.controller.commands.handlers.ClearCommandConfigPropChanges"
            commandId="org.rifidi.edge.client.sal.commands.commandconfig.clearpropertychanges">
         <enabledWhen>
            <iterate>
               <and>
                  <instanceof
                        value="org.rifidi.edge.client.model.sal.RemoteCommandConfiguration">
                  </instanceof>
                  <test
                        property="org.rifidi.edge.client.sal.commandconfig.dirty"
                        value="true">
                  </test>
               </and>
            </iterate>
         </enabledWhen>
      </handler>
      <handler
            class="org.rifidi.edge.client.sal.controller.commands.handlers.SynchCommandConfigPropertyChanges"
            commandId="org.rifidi.edge.client.sal.commands.commandconfig.synchpropertychanges">
         <enabledWhen>
            <iterate
                  ifEmpty="false">
               <and>
                  <instanceof
                        value="org.rifidi.edge.client.model.sal.RemoteCommandConfiguration">
                  </instanceof>
                  <test
                        property="org.rifidi.edge.client.sal.commandconfig.dirty"
                        value="true">
                  </test>
               </and>
            </iterate>
         </enabledWhen>
      </handler>
   </extension>
   <extension
         point="org.eclipse.ui.menus">
      <menuContribution
            locationURI="popup:org.rifidi.edge.client.sal.views.EdgeServerView?after=additions">
         <command
               commandId="org.rifidi.edge.client.sal.commands.edgeserver.connect"
               icon="icons/connect.png"
               id="org.rifidi.edge.client.sal.commands.edgeserver.connectBinding"
               label="Connect"
               style="push">
            <visibleWhen
                  checkEnabled="false">
               <iterate
                     ifEmpty="false">
                  <instanceof
                        value="org.rifidi.edge.client.model.sal.RemoteEdgeServer">
                  </instanceof>
               </iterate>
            </visibleWhen>
         </command>
         <command
               commandId="org.rifidi.edge.client.sal.commands.edgeserver.disconnect"
               icon="icons/disconnect.png"
               id="org.rifidi.edge.client.sal.commands.edgeserver.disconnectBinding"
               label="Disconnect"
               style="push">
            <visibleWhen
                  checkEnabled="false">
               <iterate
                     ifEmpty="false">
                  <instanceof
                        value="org.rifidi.edge.client.model.sal.RemoteEdgeServer">
                  </instanceof>
               </iterate>
            </visibleWhen>
         </command>
         <command
               commandId="org.rifidi.edge.client.sal.commands.edgeserver.update"
               icon="icons/arrow_refresh.png"
               id="org.rifidi.edge.client.sal.commands.edgeserver.updateBinding"
               label="Update"
               style="push">
            <visibleWhen
                  checkEnabled="false">
               <iterate
                     ifEmpty="false">
                  <instanceof
                        value="org.rifidi.edge.client.model.sal.RemoteEdgeServer">
                  </instanceof>
               </iterate>
            </visibleWhen>
         </command>
         <command
               commandId="org.rifidi.edge.client.sal.commands.edgeserver.save"
               icon="icons/disk.png"
               id="org.rifidi.edge.client.sal.commands.edgeserver.saveBinding"
               label="Save"
               style="push">
            <visibleWhen
                  checkEnabled="false">
               <iterate
                     ifEmpty="false">
                  <instanceof
                        value="org.rifidi.edge.client.model.sal.RemoteEdgeServer">
                  </instanceof>
               </iterate>
            </visibleWhen>
         </command>
         <command
               commandId="org.rifidi.edge.client.sal.commands.edgeserver.newreader"
               icon="icons/readeradd.png"
               label="New Reader ..."
               style="push">
            <visibleWhen
                  checkEnabled="false">
               <iterate
                     ifEmpty="false">
                  <instanceof
                        value="org.rifidi.edge.client.model.sal.RemoteEdgeServer">
                  </instanceof>
               </iterate>
            </visibleWhen>
         </command>
         <command
               commandId="org.rifidi.edge.client.sal.commands.reader.delete"
               icon="icons/readerdelete.png"
               label="Delete Reader"
               style="push">
            <visibleWhen
                  checkEnabled="false">
               <iterate
                     ifEmpty="false">
                  <instanceof
                        value="org.rifidi.edge.client.model.sal.RemoteReader">
                  </instanceof>
               </iterate>
            </visibleWhen>
         </command>
         <command
               commandId="org.rifidi.edge.client.sal.commands.reader.createsession"
               icon="icons/link_add.png"
               label="Create Session"
               style="push">
            <visibleWhen
                  checkEnabled="false">
               <iterate
                     ifEmpty="false">
                  <instanceof
                        value="org.rifidi.edge.client.model.sal.RemoteReader">
                  </instanceof>
               </iterate>
            </visibleWhen>
         </command>
         <command
               commandId="org.rifidi.edge.client.sal.commands.session.delete"
               icon="icons/link_delete.png"
               label="Delete Session"
               style="push">
            <visibleWhen
                  checkEnabled="false">
               <iterate
                     ifEmpty="false">
                  <instanceof
                        value="org.rifidi.edge.client.model.sal.RemoteSession">
                  </instanceof>
               </iterate>
            </visibleWhen>
         </command>
         <command
               commandId="org.rifidi.edge.client.sal.commands.session.start"
               icon="icons/link-start.png"
               label="Start Session"
               style="push">
            <visibleWhen
                  checkEnabled="false">
               <iterate
                     ifEmpty="false">
                  <instanceof
                        value="org.rifidi.edge.client.model.sal.RemoteSession">
                  </instanceof>
               </iterate>
            </visibleWhen>
         </command>
         <command
               commandId="org.rifidi.edge.client.sal.commands.session.stop"
               icon="icons/link-stop.png"
               label="Stop Session"
               style="push">
            <visibleWhen
                  checkEnabled="false">
               <iterate
                     ifEmpty="false">
                  <instanceof
                        value="org.rifidi.edge.client.model.sal.RemoteSession">
                  </instanceof>
               </iterate>
            </visibleWhen>
         </command>
         <command
               commandId="org.rifidi.edge.client.sal.commands.jobs.kill"
               icon="icons/script_delete.png"
               label="Delete Job"
               style="push">
            <visibleWhen
                  checkEnabled="false">
               <iterate
                     ifEmpty="false">
                  <instanceof
                        value="org.rifidi.edge.client.model.sal.RemoteJob">
                  </instanceof>
               </iterate>
            </visibleWhen>
         </command>
         <command
               commandId="org.rifidi.edge.client.sal.commands.jobs.submit"
               icon="icons/script_add.png"
               label="Submit Job"
               style="push">
            <visibleWhen
                  checkEnabled="false">
               <iterate
                     ifEmpty="false">
                  <instanceof
                        value="org.rifidi.edge.client.model.sal.RemoteSession">
                  </instanceof>
               </iterate>
            </visibleWhen>
         </command>
         <command
               commandId="org.rifidi.edge.client.sal.commands.reader.opentagview"
               icon="icons/transmit_go.png"
               label="Open Tag View"
               style="push">
            <visibleWhen
                  checkEnabled="false">
               <iterate
                     ifEmpty="false">
                  <instanceof
                        value="org.rifidi.edge.client.model.sal.RemoteReader">
                  </instanceof>
               </iterate>
            </visibleWhen>
         </command>
         <command
               commandId="org.rifidi.edge.client.sal.commands.reader.clearpropertychanges"
               icon="icons/table_delete.png"
               label="Clear Property Changes"
               style="push">
            <visibleWhen
                  checkEnabled="false">
               <iterate
                     ifEmpty="false">
                  <instanceof
                        value="org.rifidi.edge.client.model.sal.RemoteReader">
                  </instanceof>
               </iterate>
            </visibleWhen>
         </command>
         <command
               commandId="org.rifidi.edge.client.sal.commands.reader.synchpropertychanges"
               icon="icons/table_go.png"
               label="Commit Property Changes"
               style="push">
            <visibleWhen
                  checkEnabled="false">
               <iterate
                     ifEmpty="false">
                  <instanceof
                        value="org.rifidi.edge.client.model.sal.RemoteReader">
                  </instanceof>
               </iterate>
            </visibleWhen>
         </command>
      </menuContribution>
      <menuContribution
            locationURI="popup:org.rifidi.edge.client.sal.views.CommandView?after=additions">
         <command
               commandId="rg.rifidi.edge.client.sal.commands.commandconfig.create"
               icon="icons/cog_add.png"
               label="Create Command Template"
               style="push">
            <visibleWhen
                  checkEnabled="false">
               <iterate
                     ifEmpty="false">
                  <instanceof
                        value="org.rifidi.edge.client.model.sal.RemoteCommandConfigType">
                  </instanceof>
               </iterate>
            </visibleWhen>
         </command>
         <command
               commandId="rg.rifidi.edge.client.sal.commands.commandconfig.delete"
               icon="icons/cog_delete.png"
               label="Delete Command Template"
               style="push">
            <visibleWhen
                  checkEnabled="false">
               <iterate
                     ifEmpty="false">
                  <instanceof
                        value="org.rifidi.edge.client.model.sal.RemoteCommandConfiguration">
                  </instanceof>
               </iterate>
            </visibleWhen>
         </command>
         <command
               commandId="org.rifidi.edge.client.sal.commands.commandconfig.clearpropertychanges"
               icon="icons/table_delete.png"
               label="Clear Property Changes"
               style="push">
            <visibleWhen
                  checkEnabled="false">
               <iterate
                     ifEmpty="false">
                  <instanceof
                        value="org.rifidi.edge.client.model.sal.RemoteCommandConfiguration">
                  </instanceof>
               </iterate>
            </visibleWhen>
         </command>
         <command
               commandId="org.rifidi.edge.client.sal.commands.commandconfig.synchpropertychanges"
               icon="icons/table_go.png"
               label="Commit Property Changes"
               style="push">
            <visibleWhen
                  checkEnabled="false">
               <iterate
                     ifEmpty="false">
                  <instanceof
                        value="org.rifidi.edge.client.model.sal.RemoteCommandConfiguration">
                  </instanceof>
               </iterate>
            </visibleWhen>
         </command>
      </menuContribution>
      <menuContribution
            locationURI="toolbar:org.rifidi.edge.client.sal.views.EdgeServerView?after=additions">
         <command
               commandId="org.rifidi.edge.client.sal.commands.edgeserver.connect"
               icon="icons/connect.png"
               label="Connect"
               style="push">
         </command>
         <command
               commandId="org.rifidi.edge.client.sal.commands.edgeserver.disconnect"
               icon="icons/disconnect.png"
               label="Disconnect"
               style="push">
         </command>
         <command
               commandId="org.rifidi.edge.client.sal.commands.edgeserver.update"
               icon="icons/arrow_refresh.png"
               label="Update"
               style="push">
         </command>
      </menuContribution>
   </extension>
   <extension
         point="org.eclipse.ui.commands">
      <command
            id="org.rifidi.edge.client.sal.commands.edgeserver.connect"
            name="EdgeServerConnect">
      </command>
      <command
            id="org.rifidi.edge.client.sal.commands.edgeserver.update"
            name="EdgeServerUpdate">
      </command>
      <command
            id="org.rifidi.edge.client.sal.commands.edgeserver.disconnect"
            name="EdgeServerDisconnect">
      </command>
      <command
            id="org.rifidi.edge.client.sal.commands.edgeserver.save"
            name="EdgeServerSave">
      </command>
      <command
            id="org.rifidi.edge.client.sal.commands.edgeserver.newreader"
            name="EdgeServerNewReader">
      </command>
      <command
            id="org.rifidi.edge.client.sal.commands.reader.delete"
            name="DeleteReader">
      </command>
      <command
            id="org.rifidi.edge.client.sal.commands.reader.createsession"
            name="CreateSession">
      </command>
      <command
            id="org.rifidi.edge.client.sal.commands.session.delete"
            name="DeleteSession">
      </command>
      <command
            id="org.rifidi.edge.client.sal.commands.session.start"
            name="StartSession">
      </command>
      <command
            id="org.rifidi.edge.client.sal.commands.session.stop"
            name="StopSession">
      </command>
      <command
            id="rg.rifidi.edge.client.sal.commands.commandconfig.create"
            name="CreateCommandConfiguration">
      </command>
      <command
            id="rg.rifidi.edge.client.sal.commands.commandconfig.delete"
            name="DeleteCommandConfiguration">
      </command>
      <command
            id="org.rifidi.edge.client.sal.commands.jobs.kill"
            name="Kill Job">
      </command>
      <command
            id="org.rifidi.edge.client.sal.commands.jobs.submit"
            name="Submit Job">
      </command>
      <command
            id="org.rifidi.edge.client.sal.commands.reader.opentagview"
            name="Open Tag View">
      </command>
      <command
            id="org.rifidi.edge.client.sal.commands.reader.clearpropertychanges"
            name="ClearReaderPropertyChanges">
      </command>
      <command
            id="org.rifidi.edge.client.sal.commands.reader.synchpropertychanges"
            name="SynchReaderPropertyChanges">
      </command>
      <command
            id="org.rifidi.edge.client.sal.commands.commandconfig.clearpropertychanges"
            name="ClearCommandConfigPropertyChanges">
      </command>
      <command
            id="org.rifidi.edge.client.sal.commands.commandconfig.synchpropertychanges"
            name="SynchCommandConfigPropertyChanges">
      </command>
   </extension>
   <extension
         point="org.eclipse.core.expressions.propertyTesters">
      <propertyTester
            class="org.rifidi.edge.client.sal.controller.edgeserver.handlers.RemoteEdgeServerPropertyTester"
            id="org.rifidi.edge.client.sal.edgeserver"
            namespace="org.rifidi.edge.client.sal.edgeserver"
            properties="state, dirty"
            type="java.lang.Object">
      </propertyTester>
      <propertyTester
            class="org.rifidi.edge.client.sal.controller.edgeserver.handlers.RemoteSessionPropertyTester"
            id="org.rifidi.edge.client.sal.remotesession"
            namespace="org.rifidi.edge.client.sal.remotesession"
            properties="state"
            type="java.lang.Object">
      </propertyTester>
      <propertyTester
            class="org.rifidi.edge.client.sal.controller.edgeserver.handlers.ReaderPropertyTester"
            id="org.rifidi.edge.client.sal.reader"
            namespace="org.rifidi.edge.client.sal.reader"
            properties="dirty"
            type="java.lang.Object">
      </propertyTester>
      <propertyTester
            class="org.rifidi.edge.client.sal.controller.commands.handlers.RemoteCommandConfigPropTester"
            id="org.rifidi.edge.client.sal.commandconfig"
            namespace="org.rifidi.edge.client.sal.commandconfig"
            properties="dirty"
            type="java.lang.Object">
      </propertyTester>
   </extension>
   <extension
         point="org.eclipse.core.runtime.adapters">
      <factory
            adaptableType="org.rifidi.edge.client.model.sal.RemoteEdgeServer"
            class="org.rifidi.edge.client.sal.properties.RemoteEdgeServerAdapterFactory">
         <adapter
               type="org.eclipse.ui.views.properties.IPropertySource">
         </adapter>
      </factory>
      <factory
            adaptableType="org.rifidi.edge.client.sal.views.EdgeServerView"
            class="org.rifidi.edge.client.sal.views.EdgeServerViewAdapterFactory">
         <adapter
               type="org.eclipse.ui.views.properties.IPropertySheetPage">
         </adapter>
      </factory>
      <factory
            adaptableType="org.rifidi.edge.client.sal.views.CommandView"
            class="org.rifidi.edge.client.sal.views.CommandViewAdapterFactory">
         <adapter
               type="org.eclipse.ui.views.properties.IPropertySheetPage">
         </adapter>
      </factory>
   </extension>
   <extension
         point="org.eclipse.ui.newWizards">
      <wizard
            class="org.rifidi.edge.client.sal.wizards.newreader.NewReaderWizard"
            hasPages="true"
            id="org.rifidi.edge.client.sal.newreaderwizard"
            name="New Reader Wizard">
      </wizard>
   </extension>
   <extension
         point="org.eclipse.ui.views.properties.tabbed.propertyContributor">
      <propertyContributor
            contributorId="org.rifidi.edge.client.sal.tabbedPropContributer"
            labelProvider="org.rifidi.edge.client.sal.properties.SALTabbedPropertiesLabelProvider"
            tabDescriptorProvider="org.rifidi.edge.client.sal.properties.SALTabDescriptorProvider"
            typeMapper="org.rifidi.edge.client.sal.properties.SALTabbedPropertiesTypeMapper">
      </propertyContributor>
   </extension>

</plugin>
