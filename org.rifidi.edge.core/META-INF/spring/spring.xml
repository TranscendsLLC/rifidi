<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:osgi="http://www.springframework.org/schema/osgi"
	xmlns:amq="http://activemq.apache.org/schema/core"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
     http://www.springframework.org/schema/osgi http://www.springframework.org/schema/osgi/spring-osgi.xsd
     http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd">

	<bean id="readerConfigurationStub"
		class="org.rifidi.edge.core.rmi.internal.ReaderConfigurationStubImpl">
		<property name="readerConfigDAO" ref="ReaderConfigurationDAOImpl"></property>
		<property name="configurationDAO" ref="ConfigurationDAOImpl"></property>
	</bean>

	<osgi:service id="readerConfigurationStubService" ref="readerConfigurationStub"
		interface="org.rifidi.edge.core.rmi.ReaderConfigurationStub"></osgi:service>

	<bean id="commandConfigurationStub"
		class="org.rifidi.edge.core.rmi.internal.CommandConfigurationStubImpl">
		<property name="readerConfigDAO" ref="ReaderConfigurationDAOImpl"></property>
		<property name="configDAO" ref="ConfigurationDAOImpl"></property>
		<property name="commandConfigDAO" ref="CommandConfigurationDAOImpl"></property>
	</bean>

	<osgi:service id="commandConfigurationStubService" ref="commandConfigurationStub"
		interface="org.rifidi.edge.core.rmi.CommandConfigurationStub"></osgi:service>

	<bean id="edgeServerStub" class="org.rifidi.edge.core.rmi.internal.EdgeServerStubImpl">
		<property name="configurationService" ref="configurationService" />
		<property name="readerSessionDAO" ref="readerSessionDAOImpl" />
	</bean>

	<osgi:service id="edgeServerStubService" ref="edgeServerStub"
		interface="org.rifidi.edge.core.rmi.EdgeServerStub"></osgi:service>

	<osgi:reference id="configurationService"
		interface="org.rifidi.configuration.services.ConfigurationService" />


	<!--  Create Reader Session Service -->
	<bean id="readerSessionDAOImpl" class="org.rifidi.edge.core.readersession.ReaderSessionDAOImpl">
		<property name="context" ref="bundleContext" />
		<property name="readerConfigurations" ref="readerConfigurationsSet" />
		<property name="template" ref="senderJmsTemplate" />
		<property name="destination" ref="destination" />
	</bean>

	<!-- Create Reader Configuration DAO Service -->
	<bean id="ReaderConfigurationDAOImpl"
		class="org.rifidi.edge.core.internal.impl.ReaderConfigurationDAOImpl">
		<property name="readerConfigFactories" ref="readerConfigurationFactoriesSet" />
		<property name="readerConfiguration" ref="readerConfigurationsSet" />
	</bean>

	<!-- Create Configuration DAO Service -->
	<bean id="ConfigurationDAOImpl" class="org.rifidi.edge.core.internal.impl.ConfigurationDAOImpl">
		<property name="configurations" ref="ConfigurationSet" />
	</bean>

	<!-- Create Command Configuration DAO Service -->
	<bean id="CommandConfigurationDAOImpl"
		class="org.rifidi.edge.core.internal.impl.CommandConfigurationDAOImpl">
		<property name="commandConfigFactories" ref="commandConfigurationFactoriesSet" />
		<property name="commandConfigurations" ref="commandConfigurationSet" />
	</bean>

	<!-- Put reader session service in OSGi Registry -->
	<osgi:service id="readerSessionDAO" ref="readerSessionDAOImpl"
		interface="org.rifidi.edge.core.readersession.ReaderSessionDAO"></osgi:service>

	<!-- Listener for Reader Configurations -->
	<osgi:set id="readerConfigurationsSet"
		interface="org.rifidi.edge.core.readers.AbstractReaderConfiguration"
		cardinality="0..N">
		<osgi:listener ref="readerSessionDAOImpl"
			bind-method="bind" unbind-method="unbind" />
		<osgi:listener ref="ReaderConfigurationDAOImpl"
			bind-method="bindReaderConfiguration" unbind-method="unbindReaderConfiguration" />
	</osgi:set>

	<!-- Listener for Reader Configuration Factories -->
	<osgi:set id="readerConfigurationFactoriesSet"
		interface="org.rifidi.edge.core.readers.AbstractReaderConfigurationFactory"
		cardinality="0..N">
		<osgi:listener ref="ReaderConfigurationDAOImpl"
			bind-method="bindReaderConfigFactory" unbind-method="unbindReaderConfigFactory" />
	</osgi:set>

	<!-- Listener for Configuration Factories -->
	<osgi:set id="ConfigurationSet" interface="org.rifidi.configuration.Configuration"
		cardinality="0..N">
		<osgi:listener ref="ConfigurationDAOImpl" bind-method="bindConfiguration"
			unbind-method="unbindConfiguration" />
	</osgi:set>

	<!-- Listener for Command Configurations -->
	<osgi:set id="commandConfigurationSet"
		interface="org.rifidi.edge.core.commands.AbstractCommandConfiguration"
		cardinality="0..N">
		<osgi:listener ref="readerSessionDAOImpl"
			bind-method="bindCommand" unbind-method="unbindCommand" />
		<osgi:listener ref="CommandConfigurationDAOImpl"
			bind-method="bindCommandConfiguration" unbind-method="unbindCommandConfiguration"></osgi:listener>
	</osgi:set>

	<osgi:set id="commandConfigurationFactoriesSet"
		interface="org.rifidi.edge.core.commands.AbstractCommandConfigurationFactory"
		cardinality="1..N">
		<osgi:listener ref="CommandConfigurationDAOImpl"
			bind-method="bindCommandConfigFactory" unbind-method="unbindCommandConfigFactory"></osgi:listener>
	</osgi:set>


	<!--  JMS -->
	<amq:broker useJmx="false" persistent="false">
		<amq:transportConnectors>
			<amq:transportConnector uri="tcp://localhost:0" />
		</amq:transportConnectors>
	</amq:broker>
	<!--  ActiveMQ destinations to use  -->
	<amq:queue id="destination"
		physicalName="org.apache.activemq.spring.Test.spring.embedded" />
	<!--
		JMS ConnectionFactory to use, configuring the embedded broker using
		XML
	-->
	<amq:connectionFactory id="jmsFactory" brokerURL="vm://localhost" />
	<!-- Spring JMS Template -->
	<bean id="myJmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory">
			<!-- lets wrap in a pool to avoid creating a connection per send -->
			<bean class="org.springframework.jms.connection.SingleConnectionFactory">
				<property name="targetConnectionFactory">
					<ref local="jmsFactory" />
				</property>
			</bean>
		</property>
	</bean>

	<bean id="senderJmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="jmsFactory" />
	</bean>
</beans>