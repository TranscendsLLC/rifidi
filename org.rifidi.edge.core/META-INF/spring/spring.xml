<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:osgi="http://www.springframework.org/schema/osgi"
	xmlns:amq="http://activemq.apache.org/schema/core"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
     http://www.springframework.org/schema/osgi http://www.springframework.org/schema/osgi/spring-osgi.xsd
     http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd">

	<osgi:reference id="configurationService"
		interface="org.rifidi.configuration.services.ConfigurationService" />

	<bean id="NotifierServiceWrapper"
		class="org.rifidi.edge.notifications.internal.NotifierServiceWrapper" />

	<osgi:reference id="JMSNotifierService"
		interface="org.rifidi.edge.notifications.NotifierService"
		cardinality="0..1">
		<osgi:listener ref="NotifierServiceWrapper" bind-method="bindNotifierService"
			unbind-method="unbindNotifierService"></osgi:listener>
	</osgi:reference>

	<!-- Bind the ReaderDAO as an OSGi Service. -->
	<osgi:service id="ReaderDAOBinding" interface="org.rifidi.edge.core.daos.ReaderDAO"
		ref="ReaderDAOImpl" />
	<!-- Create Reader Configuration DAO Service -->
	<bean id="ReaderDAOImpl" class="org.rifidi.edge.core.daos.ReaderDAOImpl">
		<property name="readerFactories" ref="readerFactoriesSet" />
		<property name="reader" ref="readerSet" />
		<property name="notifierService" ref="NotifierServiceWrapper" />
	</bean>

	<!-- Bind the CommandDAO as an OSGi Service. -->
	<osgi:service id="CommandDAOBinding" interface="org.rifidi.edge.core.daos.CommandDAO"
		ref="CommandDAOImpl" />
	<!-- Create Reader Configuration DAO Service -->
	<bean id="CommandDAOImpl" class="org.rifidi.edge.core.daos.CommandDAOImpl">
		<property name="commandFactories" ref="commandFactoriesSet" />
		<property name="commands" ref="commandSet" />
	</bean>

	<!-- Create Configuration DAO Service -->
	<osgi:service id="ConfigurationDAOBinding"
		interface="org.rifidi.edge.core.daos.ConfigurationDAO" ref="ConfigurationDAOImpl" />
	<bean id="ConfigurationDAOImpl" class="org.rifidi.edge.core.daos.ConfigurationDAOImpl">
		<property name="configurations" ref="ConfigurationSet" />
		<property name="readerDAO" ref="ReaderDAOImpl" />
		<property name="commandDAO" ref="CommandDAOImpl" />
		<property name="notifierService" ref="NotifierServiceWrapper" />
	</bean>

	<!-- Listener for Reader Configurations -->
	<osgi:set id="readerSet" interface="org.rifidi.edge.core.readers.AbstractReader"
		cardinality="0..N">
		<osgi:listener ref="ReaderDAOImpl" bind-method="bindReader"
			unbind-method="unbindReader" />
	</osgi:set>

	<!-- Listener for Reader Configuration Factories -->
	<osgi:set id="readerFactoriesSet"
		interface="org.rifidi.edge.core.readers.AbstractReaderFactory"
		cardinality="0..N">
		<osgi:listener ref="ReaderDAOImpl" bind-method="bindReaderFactory"
			unbind-method="unbindReaderFactory" />
	</osgi:set>

	<!-- Listener for Configuration Factories -->
	<osgi:set id="ConfigurationSet" interface="org.rifidi.configuration.Configuration"
		cardinality="0..N">
		<osgi:listener ref="ConfigurationDAOImpl" bind-method="bindConfiguration"
			unbind-method="unbindConfiguration" />
	</osgi:set>

	<!-- Listener for Command Configurations -->
	<osgi:set id="commandSet"
		interface="org.rifidi.edge.core.commands.AbstractCommandConfiguration"
		cardinality="0..N">
		<osgi:listener ref="CommandDAOImpl" bind-method="bindCommand"
			unbind-method="unbindCommand" />
	</osgi:set>

	<osgi:set id="commandFactoriesSet"
		interface="org.rifidi.edge.core.commands.AbstractCommandConfigurationFactory"
		cardinality="0..N">
		<osgi:listener ref="CommandDAOImpl" bind-method="bindCommandFactory"
			unbind-method="unbindCommandFactory" />
	</osgi:set>


	<!--  JMS -->
	<amq:broker useJmx="false" persistent="false">
		<amq:transportConnectors>
			<amq:transportConnector uri="tcp://localhost:0" />
		</amq:transportConnectors>
	</amq:broker>
	<!--  ActiveMQ destinations to use  -->
	<amq:queue id="destination"
		physicalName="org.apache.activemq.spring.Test.spring.embedded" />
	<!--
		JMS ConnectionFactory to use, configuring the embedded broker using
		XML
	-->
	<amq:connectionFactory id="jmsFactory" brokerURL="vm://localhost" />

	<!-- Spring JMS Template -->
	<bean id="myJmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory">
			<!-- lets wrap in a pool to avoid creating a connection per send -->
			<bean class="org.springframework.jms.connection.SingleConnectionFactory">
				<property name="targetConnectionFactory">
					<ref local="jmsFactory" />
				</property>
			</bean>
		</property>
	</bean>

	<bean id="senderJmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="jmsFactory" />
	</bean>
</beans>